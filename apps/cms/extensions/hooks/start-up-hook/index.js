"use strict";var e=require("node:child_process");module.exports=({init:s},{services:o,getSchema:t,database:n})=>{const{UsersService:i,ActivityService:c}=o;s("app.after",(async()=>{const s=await t();await async function(e){const s=new i({database:n,schema:e,accountability:{admin:!0}}),o=await s.readByQuery({filter:{_and:[{email:{_eq:process.env.ADMIN_EMAIL}}]}});o&&o.length>0?await n("directus_users").where({id:o[0].id}).update({token:process.env.CMS_ACCESS_TOKEN}):console.error("The default admin user does not exist!!")}(s),await async function(s){if(!process.env.PUBLIC_URL.includes("http://localhost"))return;const o=new c({database:n,schema:s,accountability:{admin:!0}}),t=await o.readByQuery({filter:{collection:{_ncontains:"directus_"}}});if(t&&0!==t.length)console.log("Directus activity found, not prompting for seed.");else{const s=e.spawn("npm",["run","seed"],{stdio:"inherit"});process.on("SIGTERM",(()=>{console.log("SIGTERM"),s.kill(),process.exit(143)})),process.on("exit",(e=>{console.log("exit"),process.exit(e)})),s.on("error",(e=>{console.log(e)})),s.on("exit",(e=>{const s=`seeder exited with code: ${e}`;0===e?console.log(s):console.warn(s)}))}}(s)}))};
